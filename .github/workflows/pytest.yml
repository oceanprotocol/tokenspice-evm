name: Unit Testing and Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ 3.8, 3.9 ]


    steps:
      - uses: actions/checkout@v2

      - name: Set up Python {{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Ganache-CLI
        run: npm install ganache-cli --global

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest numpy
          if [ -f requirements.txt ]; 
            then pip install -r requirements.txt; 
            echo "Requirements.txt found!"
          fi
          
      - name: Find out what the directory structure looks like.
        run: |
          pwd
          tree
          
      - name: Executing Python Ganache Script
        run: |
          nohup python3 ganache.py --run-in-background

      - name: Check Node version on this machine.
        run: |
          node -v

      - name: Making a Directory for Ocean Protocol Repo
        run: |
          mkdir ../contracts 

      - name: Clone Ocean Protocol Contracts
        uses: actions/checkout@master
        with:
          repository: JohannSuarez/contracts
          path: .github/to_outside/contracts

      - name: Deploy Contracts to Ganache
        run: |
          cd .github/to_outside/contracts
          npm i
          npm run deploy

      - name: Check Current directory After installing and Deploying contracts
        run: |
          pwd
          tree

      - name: Trying to Print contracts/setup.cfg
        run: |
          cat .github/to_outside/contracts/setup.cfg

      - name: Run Pytest (Just one test)
        run: |
          pytest agents/test/test_DataconsumerAgent.py

      - name: Run Entire Suite of Tests Along With Code Coverage Analysis
        run: |
          coverage run -m pytest
          coverage xml
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml
